{
  "openapi": "3.1.0",
  "info": {
    "title": "Box4Kids",
    "description": "API для Box4Kids - сервис аренды игрушек для детей",
    "version": "0.1.0"
  },
  "paths": {
    "/auth/send-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Send Otp",
        "description": "Отправляет OTP код на указанный номер телефона",
        "operationId": "send_otp_auth_send_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/dev-get-code": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Dev Get Code",
        "description": "DEV метод чтобы получить код для тестирования",
        "operationId": "dev_get_code_auth_dev_get_code_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhoneRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DevGetCodeResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-otp": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify Otp",
        "description": "Проверяет OTP код и создает/возвращает пользователя с токенами",
        "operationId": "verify_otp_auth_verify_otp_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTPRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/change-phone/initiate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Initiate Phone Change",
        "description": "Инициация смены номера телефона - проверяет текущий номер и отправляет OTP на новый",
        "operationId": "initiate_phone_change_auth_change_phone_initiate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiatePhoneChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/change-phone/confirm": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Confirm Phone Change",
        "description": "Подтверждение смены номера - проверяет OTP нового номера и обновляет пользователя",
        "operationId": "confirm_phone_change_auth_change_phone_confirm_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmPhoneChangeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refresh Token",
        "description": "Обновляет access токен используя refresh токен",
        "operationId": "refresh_token_auth_refresh_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Profile",
        "description": "Получает профиль текущего пользователя с детьми",
        "operationId": "get_user_profile_users_profile_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Profile",
        "description": "Обновляет профиль текущего пользователя",
        "operationId": "update_user_profile_users_profile_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserProfileUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfileUpdateResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/users/children": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get User Children",
        "description": "Получает детей текущего пользователя с интересами и навыками",
        "operationId": "get_user_children_users_children_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ChildResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Children Users Children Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/subscriptions/": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create Subscription Order",
        "description": "Создает заказ подписки для текущего пользователя",
        "operationId": "create_subscription_order_subscriptions__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/subscriptions/user": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get User Subscriptions",
        "description": "Получает подписки текущего пользователя",
        "operationId": "get_user_subscriptions_subscriptions_user_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SubscriptionWithDetailsResponse"
                  },
                  "type": "array",
                  "title": "Response Get User Subscriptions Subscriptions User Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/subscriptions/{subscription_id}": {
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get Subscription",
        "description": "Получает подписку по ID",
        "operationId": "get_subscription_subscriptions__subscription_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update Subscription",
        "description": "Обновляет подписку",
        "operationId": "update_subscription_subscriptions__subscription_id__patch",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Subscription Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscription_id}/pause": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Pause Subscription",
        "description": "Приостанавливает подписку по ID",
        "operationId": "pause_subscription_subscriptions__subscription_id__pause_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PauseSubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscription_id}/resume": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Resume Subscription",
        "description": "Возобновляет приостановленную подписку по ID",
        "operationId": "resume_subscription_subscriptions__subscription_id__resume_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "subscription_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Subscription Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResumeSubscriptionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/payments/create-batch": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create Batch Payment",
        "description": "Создает пакетный платеж для нескольких подписок",
        "operationId": "create_batch_payment_payments_create_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchPaymentCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchPaymentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/payments/{payment_id}/process": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Process Payment",
        "description": "Обрабатывает платеж и активирует подписки (с реалистичной задержкой 5-15 сек)",
        "operationId": "process_payment_payments__payment_id__process_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Payment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessPaymentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/payments/process-subscriptions": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Process Subscriptions",
        "description": "Создает платеж и сразу его обрабатывает для указанных подписок",
        "operationId": "process_subscriptions_payments_process_subscriptions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSubscriptionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSubscriptionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/payments/return": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Payment Return",
        "description": "Имитация возврата с платежной страницы",
        "operationId": "payment_return_payments_return_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentReturnRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/payments/webhook": {
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Payment Webhook",
        "description": "Имитация webhook от платежной системы",
        "operationId": "payment_webhook_payments_webhook_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentWebhookRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/login": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Admin Login",
        "description": "Авторизация администратора",
        "operationId": "admin_login_admin_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdminLoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminLoginResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/users": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get All Users",
        "description": "Получает всех пользователей с полной информацией для админки",
        "operationId": "get_all_users_admin_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/AdminUserResponse"
                  },
                  "type": "array",
                  "title": "Response Get All Users Admin Users Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/admin/users/{user_id}/role": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Change User Role",
        "description": "Изменяет роль пользователя",
        "operationId": "change_user_role_admin_users__user_id__role_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "User Id"
            }
          },
          {
            "name": "new_role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/toy-boxes/{box_id}/status": {
      "put": {
        "tags": [
          "Admin"
        ],
        "summary": "Update Toy Box Status",
        "description": "Изменяет статус набора игрушек",
        "operationId": "update_toy_box_status_admin_toy_boxes__box_id__status_put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Box Id"
            }
          },
          {
            "name": "new_status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "New Status"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/children/": {
      "post": {
        "tags": [
          "Children"
        ],
        "summary": "Create Child",
        "description": "Создать ребенка для текущего пользователя",
        "operationId": "create_child_children__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/children/{child_id}": {
      "get": {
        "tags": [
          "Children"
        ],
        "summary": "Get Child",
        "description": "Получить ребенка по ID с интересами и навыками",
        "operationId": "get_child_children__child_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "child_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Child Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Children"
        ],
        "summary": "Update Child",
        "description": "Обновить ребенка (включая интересы и навыки)",
        "operationId": "update_child_children__child_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "child_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Child Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChildUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChildResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Children"
        ],
        "summary": "Delete Child",
        "description": "Удалить ребенка",
        "operationId": "delete_child_children__child_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "child_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Child Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/interests/": {
      "get": {
        "tags": [
          "Interests"
        ],
        "summary": "Get All Interests",
        "description": "Получить все интересы",
        "operationId": "get_all_interests_interests__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InterestsListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/skills/": {
      "get": {
        "tags": [
          "Skills"
        ],
        "summary": "Get All Skills",
        "description": "Получить все навыки",
        "operationId": "get_all_skills_skills__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SkillsListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/toy-categories/": {
      "get": {
        "tags": [
          "Toy Categories"
        ],
        "summary": "Get All Toy Categories",
        "description": "Получить все категории игрушек",
        "operationId": "get_all_toy_categories_toy_categories__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToyCategoriesListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/subscription-plans/": {
      "get": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Get All Subscription Plans",
        "description": "Получить все планы подписки с конфигурациями игрушек",
        "operationId": "get_all_subscription_plans_subscription_plans__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionPlansListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/delivery-addresses/": {
      "get": {
        "tags": [
          "Delivery Addresses"
        ],
        "summary": "Get User Delivery Addresses",
        "description": "Получить адреса доставки текущего пользователя",
        "operationId": "get_user_delivery_addresses_delivery_addresses__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Максимальное количество адресов",
              "title": "Limit"
            },
            "description": "Максимальное количество адресов"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryInfoListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Delivery Addresses"
        ],
        "summary": "Create Delivery Address",
        "description": "Создать новый адрес доставки для текущего пользователя",
        "operationId": "create_delivery_address_delivery_addresses__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryInfoCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/delivery-addresses/{address_id}": {
      "put": {
        "tags": [
          "Delivery Addresses"
        ],
        "summary": "Update Delivery Address",
        "description": "Обновить адрес доставки текущего пользователя",
        "operationId": "update_delivery_address_delivery_addresses__address_id__put",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Address Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryInfoUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delivery Addresses"
        ],
        "summary": "Delete Delivery Address",
        "description": "Удалить адрес доставки текущего пользователя",
        "operationId": "delete_delivery_address_delivery_addresses__address_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "address_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Address Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/current/{child_id}": {
      "get": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Get Current Box",
        "description": "Получить текущий набор ребёнка",
        "operationId": "get_current_box_toy_boxes_current__child_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "child_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Child Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToyBoxResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/next/{child_id}": {
      "get": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Get Next Box",
        "description": "Получить следующий набор для ребёнка (генерируется на лету)",
        "operationId": "get_next_box_toy_boxes_next__child_id__get",
        "parameters": [
          {
            "name": "child_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Child Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NextBoxResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/create": {
      "post": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Create Toy Box",
        "description": "Создать набор для подписки",
        "operationId": "create_toy_box_toy_boxes_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToyBoxCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToyBoxResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/{box_id}/review": {
      "post": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Add Box Review",
        "description": "Добавить отзыв к набору",
        "operationId": "add_box_review_toy_boxes__box_id__review_post",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Box Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToyBoxReviewRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/{box_id}/reviews": {
      "get": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Get Box Reviews",
        "description": "Получить все отзывы для набора",
        "operationId": "get_box_reviews_toy_boxes__box_id__reviews_get",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Box Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToyBoxReviewsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/history": {
      "get": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Get Box History",
        "description": "Получить историю наборов текущего пользователя",
        "operationId": "get_box_history_toy_boxes_history_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ToyBoxStatus"
              },
              "description": "Filter by status",
              "default": [],
              "title": "Status"
            },
            "description": "Filter by status"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToyBoxListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/toy-boxes/{box_id}": {
      "get": {
        "tags": [
          "Toy Boxes"
        ],
        "summary": "Get Box By Id",
        "description": "Получить набор по ID",
        "operationId": "get_box_by_id_toy_boxes__box_id__get",
        "parameters": [
          {
            "name": "box_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Box Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ToyBoxResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdminLoginRequest": {
        "properties": {
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "AdminLoginRequest"
      },
      "AdminLoginResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type",
            "default": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "expires_in"
        ],
        "title": "AdminLoginResponse"
      },
      "AdminUserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "children": {
            "items": {
              "$ref": "#/components/schemas/ChildWithBoxesResponse"
            },
            "type": "array",
            "title": "Children"
          },
          "delivery_addresses": {
            "$ref": "#/components/schemas/DeliveryInfoListResponse"
          },
          "subscriptions": {
            "items": {
              "$ref": "#/components/schemas/SubscriptionWithDetailsResponse"
            },
            "type": "array",
            "title": "Subscriptions"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number",
          "role",
          "created_at",
          "children",
          "delivery_addresses",
          "subscriptions"
        ],
        "title": "AdminUserResponse",
        "description": "Схема для пользователя в админке"
      },
      "AuthResponse": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "user",
          "access_token"
        ],
        "title": "AuthResponse"
      },
      "BatchPaymentCreateRequest": {
        "properties": {
          "subscription_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Subscription Ids"
          }
        },
        "type": "object",
        "required": [
          "subscription_ids"
        ],
        "title": "BatchPaymentCreateRequest",
        "description": "Схема для создания пакетного платежа"
      },
      "BatchPaymentResponse": {
        "properties": {
          "payment_id": {
            "type": "integer",
            "title": "Payment Id"
          },
          "external_payment_id": {
            "type": "string",
            "title": "External Payment Id"
          },
          "payment_url": {
            "type": "string",
            "title": "Payment Url"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          },
          "currency": {
            "type": "string",
            "title": "Currency"
          },
          "subscription_count": {
            "type": "integer",
            "title": "Subscription Count"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "payment_id",
          "external_payment_id",
          "payment_url",
          "amount",
          "currency",
          "subscription_count",
          "message"
        ],
        "title": "BatchPaymentResponse",
        "description": "Схема ответа при создании пакетного платежа"
      },
      "ChildCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Имя ребенка"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "title": "Date Of Birth",
            "description": "Дата рождения ребенка"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ],
            "description": "Пол ребенка"
          },
          "has_limitations": {
            "type": "boolean",
            "title": "Has Limitations",
            "description": "Есть ли ограничения по здоровью",
            "default": false
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Комментарий о ребенке"
          }
        },
        "type": "object",
        "required": [
          "name",
          "date_of_birth",
          "gender"
        ],
        "title": "ChildCreate"
      },
      "ChildResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "title": "Date Of Birth"
          },
          "gender": {
            "$ref": "#/components/schemas/Gender"
          },
          "has_limitations": {
            "type": "boolean",
            "title": "Has Limitations"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "parent_id": {
            "type": "integer",
            "title": "Parent Id"
          },
          "interests": {
            "items": {
              "$ref": "#/components/schemas/InterestResponse"
            },
            "type": "array",
            "title": "Interests"
          },
          "skills": {
            "items": {
              "$ref": "#/components/schemas/SkillResponse"
            },
            "type": "array",
            "title": "Skills"
          },
          "subscriptions": {
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponse"
            },
            "type": "array",
            "title": "Subscriptions"
          },
          "age": {
            "type": "integer",
            "title": "Age",
            "description": "Вычисляет возраст ребенка на основе даты рождения.\n\nПримечание: Вычисление происходит только по датам без учета времени и часовых поясов.\nЭто покрывает 99% случаев корректно для детских игрушек.",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "date_of_birth",
          "gender",
          "has_limitations",
          "comment",
          "parent_id",
          "interests",
          "skills",
          "subscriptions",
          "age"
        ],
        "title": "ChildResponse"
      },
      "ChildUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "date_of_birth": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Of Birth"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Gender"
              },
              {
                "type": "null"
              }
            ]
          },
          "has_limitations": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Has Limitations"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "interest_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interest Ids"
          },
          "skill_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Skill Ids"
          }
        },
        "type": "object",
        "title": "ChildUpdate"
      },
      "ChildWithBoxesResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "date_of_birth": {
            "type": "string",
            "title": "Date Of Birth"
          },
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "has_limitations": {
            "type": "boolean",
            "title": "Has Limitations"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "current_box": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ToyBoxResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "next_box": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NextBoxResponse"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "date_of_birth",
          "gender",
          "has_limitations"
        ],
        "title": "ChildWithBoxesResponse",
        "description": "Схема для ребенка с наборами"
      },
      "ConfirmPhoneChangeRequest": {
        "properties": {
          "new_phone": {
            "type": "string",
            "title": "New Phone",
            "description": "Новый номер телефона"
          },
          "new_phone_code": {
            "type": "string",
            "title": "New Phone Code",
            "description": "OTP код для нового номера"
          }
        },
        "type": "object",
        "required": [
          "new_phone",
          "new_phone_code"
        ],
        "title": "ConfirmPhoneChangeRequest"
      },
      "DeliveryInfoCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Название адреса (Дом, Работа, и т.д.)"
          },
          "address": {
            "type": "string",
            "title": "Address",
            "description": "Полный адрес доставки"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Дата доставки"
          },
          "time": {
            "type": "string",
            "title": "Time",
            "description": "Предпочтительное время доставки"
          },
          "courier_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courier Comment",
            "description": "Комментарий для курьера"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address",
          "date",
          "time"
        ],
        "title": "DeliveryInfoCreate",
        "description": "Схема для создания нового адреса доставки"
      },
      "DeliveryInfoListResponse": {
        "properties": {
          "addresses": {
            "items": {
              "$ref": "#/components/schemas/DeliveryInfoResponse"
            },
            "type": "array",
            "title": "Addresses"
          }
        },
        "type": "object",
        "required": [
          "addresses"
        ],
        "title": "DeliveryInfoListResponse",
        "description": "Список адресов доставки"
      },
      "DeliveryInfoResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Название адреса (Дом, Работа, и т.д.)"
          },
          "address": {
            "type": "string",
            "title": "Address",
            "description": "Полный адрес доставки"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Дата доставки"
          },
          "time": {
            "type": "string",
            "title": "Time",
            "description": "Предпочтительное время доставки"
          },
          "courier_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courier Comment",
            "description": "Комментарий для курьера"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "address",
          "date",
          "time",
          "id",
          "user_id",
          "created_at"
        ],
        "title": "DeliveryInfoResponse",
        "description": "Схема ответа с данными адреса доставки"
      },
      "DeliveryInfoUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name",
            "description": "Название адреса"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "description": "Полный адрес доставки"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date",
            "description": "Дата доставки"
          },
          "time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Time",
            "description": "Предпочтительное время доставки"
          },
          "courier_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courier Comment",
            "description": "Комментарий для курьера"
          }
        },
        "type": "object",
        "title": "DeliveryInfoUpdate",
        "description": "Схема для обновления адреса доставки"
      },
      "DevGetCodeResponse": {
        "properties": {
          "code": {
            "type": "string",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "code"
        ],
        "title": "DevGetCodeResponse"
      },
      "Gender": {
        "type": "string",
        "enum": [
          "male",
          "female"
        ],
        "title": "Gender"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "InitiatePhoneChangeRequest": {
        "properties": {
          "current_phone_code": {
            "type": "string",
            "title": "Current Phone Code",
            "description": "OTP код для текущего номера"
          },
          "new_phone": {
            "type": "string",
            "title": "New Phone",
            "description": "Новый номер телефона"
          }
        },
        "type": "object",
        "required": [
          "current_phone_code",
          "new_phone"
        ],
        "title": "InitiatePhoneChangeRequest"
      },
      "InterestResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "InterestResponse"
      },
      "InterestsListResponse": {
        "properties": {
          "interests": {
            "items": {
              "$ref": "#/components/schemas/InterestResponse"
            },
            "type": "array",
            "title": "Interests"
          }
        },
        "type": "object",
        "required": [
          "interests"
        ],
        "title": "InterestsListResponse"
      },
      "NextBoxItemResponse": {
        "properties": {
          "category_id": {
            "type": "integer",
            "title": "Category Id"
          },
          "category_name": {
            "type": "string",
            "title": "Category Name"
          },
          "category_icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Category Icon"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "category_id",
          "category_name",
          "quantity"
        ],
        "title": "NextBoxItemResponse",
        "description": "Элемент следующего набора (генерируется на лету)"
      },
      "NextBoxResponse": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/NextBoxItemResponse"
            },
            "type": "array",
            "title": "Items"
          },
          "delivery_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Date"
          },
          "return_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Date"
          },
          "delivery_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Time"
          },
          "return_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Time"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "items",
          "message"
        ],
        "title": "NextBoxResponse",
        "description": "Следующий набор (генерируется на лету)"
      },
      "OTPRequest": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Номер телефона"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "OTP код"
          }
        },
        "type": "object",
        "required": [
          "phone_number",
          "code"
        ],
        "title": "OTPRequest"
      },
      "PauseSubscriptionResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Сообщение о результате операции"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "PauseSubscriptionResponse",
        "description": "Схема ответа при приостановке подписки"
      },
      "PaymentReturnRequest": {
        "properties": {
          "external_payment_id": {
            "type": "string",
            "title": "External Payment Id"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "default": "success"
          }
        },
        "type": "object",
        "required": [
          "external_payment_id"
        ],
        "title": "PaymentReturnRequest",
        "description": "Схема для возврата с платежной страницы"
      },
      "PaymentStatusEnum": {
        "type": "string",
        "enum": [
          "success",
          "failed"
        ],
        "title": "PaymentStatusEnum",
        "description": "Статусы платежа"
      },
      "PaymentWebhookRequest": {
        "properties": {
          "external_payment_id": {
            "type": "string",
            "title": "External Payment Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "external_payment_id",
          "status"
        ],
        "title": "PaymentWebhookRequest",
        "description": "Схема для webhook от платежной системы"
      },
      "PhoneRequest": {
        "properties": {
          "phone_number": {
            "type": "string",
            "title": "Phone Number",
            "description": "Номер телефона в формате +7XXXXXXXXXX"
          }
        },
        "type": "object",
        "required": [
          "phone_number"
        ],
        "title": "PhoneRequest"
      },
      "ProcessPaymentResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "title": "ProcessPaymentResponse",
        "description": "Схема ответа при обработке платежа"
      },
      "ProcessSubscriptionsRequest": {
        "properties": {
          "subscription_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Subscription Ids"
          }
        },
        "type": "object",
        "required": [
          "subscription_ids"
        ],
        "title": "ProcessSubscriptionsRequest",
        "description": "Схема для обработки подписок"
      },
      "ProcessSubscriptionsResponse": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/PaymentStatusEnum"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "payment_id": {
            "type": "integer",
            "title": "Payment Id"
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "status",
          "message",
          "payment_id",
          "amount"
        ],
        "title": "ProcessSubscriptionsResponse",
        "description": "Схема ответа при обработке подписок"
      },
      "RefreshTokenRequest": {
        "properties": {
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token",
            "description": "Refresh токен для обновления"
          }
        },
        "type": "object",
        "required": [
          "refresh_token"
        ],
        "title": "RefreshTokenRequest"
      },
      "ResumeSubscriptionResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Сообщение о результате операции"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ResumeSubscriptionResponse",
        "description": "Схема ответа при возобновлении подписки"
      },
      "SkillResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "SkillResponse"
      },
      "SkillsListResponse": {
        "properties": {
          "skills": {
            "items": {
              "$ref": "#/components/schemas/SkillResponse"
            },
            "type": "array",
            "title": "Skills"
          }
        },
        "type": "object",
        "required": [
          "skills"
        ],
        "title": "SkillsListResponse"
      },
      "SubscriptionCreateRequest": {
        "properties": {
          "child_id": {
            "type": "integer",
            "title": "Child Id",
            "description": "ID ребенка"
          },
          "plan_id": {
            "type": "integer",
            "title": "Plan Id",
            "description": "ID плана подписки"
          },
          "delivery_info_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Info Id",
            "description": "ID адреса доставки"
          }
        },
        "type": "object",
        "required": [
          "child_id",
          "plan_id"
        ],
        "title": "SubscriptionCreateRequest",
        "description": "Схема для создания подписки"
      },
      "SubscriptionPlanResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "price_monthly": {
            "type": "number",
            "title": "Price Monthly"
          },
          "toy_count": {
            "type": "integer",
            "title": "Toy Count"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "toy_configurations": {
            "items": {
              "$ref": "#/components/schemas/ToyCategoryConfigResponse"
            },
            "type": "array",
            "title": "Toy Configurations",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "price_monthly",
          "toy_count"
        ],
        "title": "SubscriptionPlanResponse",
        "description": "Ответ с планом подписки"
      },
      "SubscriptionPlansListResponse": {
        "properties": {
          "plans": {
            "items": {
              "$ref": "#/components/schemas/SubscriptionPlanResponse"
            },
            "type": "array",
            "title": "Plans"
          }
        },
        "type": "object",
        "required": [
          "plans"
        ],
        "title": "SubscriptionPlansListResponse",
        "description": "Список планов подписки"
      },
      "SubscriptionResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "child_id": {
            "type": "integer",
            "title": "Child Id"
          },
          "plan_id": {
            "type": "integer",
            "title": "Plan Id"
          },
          "delivery_info_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Info Id"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "discount_percent": {
            "type": "number",
            "title": "Discount Percent"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_paused": {
            "type": "boolean",
            "title": "Is Paused",
            "description": "Приостановлена ли подписка",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "id",
          "child_id",
          "plan_id",
          "delivery_info_id",
          "status",
          "discount_percent",
          "created_at",
          "expires_at"
        ],
        "title": "SubscriptionResponse",
        "description": "Схема ответа с данными подписки"
      },
      "SubscriptionStatus": {
        "type": "string",
        "enum": [
          "pending_payment",
          "active",
          "paused",
          "cancelled",
          "expired"
        ],
        "title": "SubscriptionStatus"
      },
      "SubscriptionUpdateRequest": {
        "properties": {
          "child_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Child Id",
            "description": "ID ребенка"
          },
          "plan_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan Id",
            "description": "ID плана подписки"
          },
          "delivery_info_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Info Id",
            "description": "ID адреса доставки"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SubscriptionStatus"
              },
              {
                "type": "null"
              }
            ],
            "description": "Статус подписки"
          },
          "discount_percent": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discount Percent",
            "description": "Процент скидки"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At",
            "description": "Дата истечения"
          }
        },
        "type": "object",
        "title": "SubscriptionUpdateRequest",
        "description": "Схема для обновления подписки"
      },
      "SubscriptionWithDetailsResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "child_id": {
            "type": "integer",
            "title": "Child Id"
          },
          "plan_id": {
            "type": "integer",
            "title": "Plan Id"
          },
          "delivery_info_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Info Id"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "discount_percent": {
            "type": "number",
            "title": "Discount Percent"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "is_paused": {
            "type": "boolean",
            "title": "Is Paused",
            "description": "Приостановлена ли подписка",
            "default": false
          },
          "child_name": {
            "type": "string",
            "title": "Child Name"
          },
          "plan_name": {
            "type": "string",
            "title": "Plan Name"
          },
          "plan_price": {
            "type": "number",
            "title": "Plan Price"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "user_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "child_id",
          "plan_id",
          "delivery_info_id",
          "status",
          "discount_percent",
          "created_at",
          "expires_at",
          "child_name",
          "plan_name",
          "plan_price",
          "user_id",
          "user_name"
        ],
        "title": "SubscriptionWithDetailsResponse",
        "description": "Схема ответа с подробными данными подписки"
      },
      "TokenResponse": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refresh Token"
          }
        },
        "type": "object",
        "required": [
          "access_token"
        ],
        "title": "TokenResponse"
      },
      "ToyBoxCreateRequest": {
        "properties": {
          "subscription_id": {
            "type": "integer",
            "title": "Subscription Id"
          }
        },
        "type": "object",
        "required": [
          "subscription_id"
        ],
        "title": "ToyBoxCreateRequest",
        "description": "Запрос на создание набора"
      },
      "ToyBoxItemResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "toy_category_id": {
            "type": "integer",
            "title": "Toy Category Id"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "id",
          "toy_category_id",
          "quantity"
        ],
        "title": "ToyBoxItemResponse",
        "description": "Элемент состава набора"
      },
      "ToyBoxListResponse": {
        "properties": {
          "boxes": {
            "items": {
              "$ref": "#/components/schemas/ToyBoxResponse"
            },
            "type": "array",
            "title": "Boxes"
          }
        },
        "type": "object",
        "required": [
          "boxes"
        ],
        "title": "ToyBoxListResponse",
        "description": "Список наборов"
      },
      "ToyBoxResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "subscription_id": {
            "type": "integer",
            "title": "Subscription Id"
          },
          "child_id": {
            "type": "integer",
            "title": "Child Id"
          },
          "delivery_info_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Info Id"
          },
          "status": {
            "$ref": "#/components/schemas/ToyBoxStatus"
          },
          "delivery_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Date"
          },
          "return_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Date"
          },
          "delivery_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Delivery Time"
          },
          "return_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Return Time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/ToyBoxItemResponse"
            },
            "type": "array",
            "title": "Items",
            "default": []
          },
          "reviews": {
            "items": {
              "$ref": "#/components/schemas/ToyBoxReviewResponse"
            },
            "type": "array",
            "title": "Reviews",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "id",
          "subscription_id",
          "child_id",
          "status",
          "created_at"
        ],
        "title": "ToyBoxResponse",
        "description": "Ответ с набором игрушек"
      },
      "ToyBoxReviewRequest": {
        "properties": {
          "user_id": {
            "type": "integer",
            "title": "User Id",
            "description": "ID пользователя оставляющего отзыв"
          },
          "rating": {
            "type": "integer",
            "maximum": 5,
            "minimum": 1,
            "title": "Rating",
            "description": "Оценка от 1 до 5"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 500
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Комментарий к отзыву"
          }
        },
        "type": "object",
        "required": [
          "user_id",
          "rating"
        ],
        "title": "ToyBoxReviewRequest",
        "description": "Запрос на добавление отзыва"
      },
      "ToyBoxReviewResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "user_id": {
            "type": "integer",
            "title": "User Id"
          },
          "rating": {
            "type": "integer",
            "title": "Rating"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "rating",
          "created_at"
        ],
        "title": "ToyBoxReviewResponse",
        "description": "Отзыв на набор"
      },
      "ToyBoxReviewsResponse": {
        "properties": {
          "reviews": {
            "items": {
              "$ref": "#/components/schemas/ToyBoxReviewResponse"
            },
            "type": "array",
            "title": "Reviews"
          }
        },
        "type": "object",
        "required": [
          "reviews"
        ],
        "title": "ToyBoxReviewsResponse",
        "description": "Список отзывов на набор"
      },
      "ToyBoxStatus": {
        "type": "string",
        "enum": [
          "planned",
          "assembled",
          "shipped",
          "delivered",
          "returned"
        ],
        "title": "ToyBoxStatus",
        "description": "Статусы набора игрушек в процессе аренды"
      },
      "ToyCategoriesListResponse": {
        "properties": {
          "categories": {
            "items": {
              "$ref": "#/components/schemas/ToyCategoryResponse"
            },
            "type": "array",
            "title": "Categories"
          }
        },
        "type": "object",
        "required": [
          "categories"
        ],
        "title": "ToyCategoriesListResponse"
      },
      "ToyCategoryConfigResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "quantity": {
            "type": "integer",
            "title": "Quantity"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "quantity"
        ],
        "title": "ToyCategoryConfigResponse",
        "description": "Конфигурация категории игрушек в плане"
      },
      "ToyCategoryResponse": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "icon": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Icon"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "id"
        ],
        "title": "ToyCategoryResponse"
      },
      "UserProfileResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number",
          "role"
        ],
        "title": "UserProfileResponse"
      },
      "UserProfileUpdateRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name",
            "description": "Имя пользователя"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "UserProfileUpdateRequest"
      },
      "UserProfileUpdateResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number",
          "name",
          "role"
        ],
        "title": "UserProfileUpdateResponse"
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "phone_number": {
            "type": "string",
            "title": "Phone Number"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "role": {
            "type": "string",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "id",
          "phone_number",
          "role"
        ],
        "title": "UserResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}