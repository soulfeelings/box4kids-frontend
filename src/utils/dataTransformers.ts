import {
  UserProfileResponse,
  SubscriptionWithDetailsResponse,
  ToyBoxResponse,
  ChildResponse,
  DeliveryInfoResponse,
} from "../types/api";
import { UserData } from "../types";

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö API –≤ —Ñ–æ—Ä–º–∞—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
export const transformMainScreenData = (
  userProfile: UserProfileResponse,
  subscriptions: SubscriptionWithDetailsResponse[],
  deliveryAddresses: DeliveryInfoResponse[],
  currentBoxes: Map<number, ToyBoxResponse>,
  nextBoxes: Map<number, ToyBoxResponse>
): UserData => {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
  const getSubscriptionStatus = ():
    | "not_subscribed"
    | "just_subscribed"
    | "active" => {
    if (subscriptions.length === 0) return "not_subscribed";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∫–∏
    const activeSubscriptions = subscriptions.filter(
      (sub) => sub.status === "active"
    );
    if (activeSubscriptions.length === 0) return "not_subscribed";

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –Ω–µ–¥–∞–≤–Ω–æ (—É—Å–ª–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞)
    const recentSubscription = activeSubscriptions.find((sub) => {
      const createdAt = new Date(sub.created_at);
      const now = new Date();
      const diffHours =
        (now.getTime() - createdAt.getTime()) / (1000 * 60 * 60);
      return diffHours <= 2;
    });

    if (recentSubscription) return "just_subscribed";

    return "active";
  };

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–±–æ—Ä–∞
  const getNextSetStatus = (): "not_determined" | "determined" => {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞–±–æ—Ä—ã –¥–ª—è –¥–µ—Ç–µ–π, —Ç–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
    return nextBoxes.size > 0 ? "determined" : "not_determined";
  };

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–µ—Ç–µ–π –∏—Å–ø–æ–ª—å–∑—É—è –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const transformedChildren = userProfile.children.map(
    (child: ChildResponse) => ({
      id: child.id,
      name: child.name,
      birthDate: child.date_of_birth, // –†–µ–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ –∏–∑ API
      gender: child.gender,
      limitations: (child.has_limitations ? "has_limitations" : "none") as
        | "has_limitations"
        | "none",
      comment: child.comment || "",
      interests: child.interests.map((interest: any) =>
        interest.name.split(" ").slice(1).join(" ")
      ), // –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
      skills: child.skills.map((skill: any) =>
        skill.name.split(" ").slice(1).join(" ")
      ), // –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è
      subscription:
        subscriptions.length > 0
          ? ("base" as const) // TODO: –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏
          : ("" as const),
    })
  );

  // –ü–æ–ª—É—á–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏ (–ø–µ—Ä–≤—ã–π –∏–∑ —Å–ø–∏—Å–∫–∞)
  const primaryAddress = deliveryAddresses[0];

  return {
    name: userProfile.name || "",
    phone: userProfile.phone_number,
    children: transformedChildren,
    deliveryAddress: primaryAddress?.address || "",
    deliveryDate: "", // TODO: –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ –¥–æ—Å—Ç–∞–≤–∫–µ
    deliveryTime: primaryAddress?.delivery_time_preference || "",
    subscriptionStatus: getSubscriptionStatus(),
    nextSetStatus: getNextSetStatus(),
    subscriptionDate:
      subscriptions.length > 0
        ? subscriptions[0].expires_at || undefined
        : undefined,
  };
};

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–±–æ—Ä–∞ –∏–≥—Ä—É—à–µ–∫
export const transformToyBoxToToys = (toyBox: ToyBoxResponse) => {
  return toyBox.items.map((item) => ({
    icon: getToyIcon(item.toy_category_id), // TODO: —Å–æ–∑–¥–∞—Ç—å –º–∞–ø–ø–∏–Ω–≥
    count: item.quantity,
    name: getToyName(item.toy_category_id), // TODO: —Å–æ–∑–¥–∞—Ç—å –º–∞–ø–ø–∏–Ω–≥
    color: getToyColor(item.toy_category_id), // TODO: —Å–æ–∑–¥–∞—Ç—å –º–∞–ø–ø–∏–Ω–≥
  }));
};

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (TODO: –ø–æ–ª—É—á–∞—Ç—å —Å –±–µ–∫–µ–Ω–¥–∞)
// TODO: –î–æ—Ä–∞–±–æ—Ç–∞—Ç—å ToyBoxItemResponse —á—Ç–æ–±—ã –≤–∫–ª—é—á–∞—Ç—å category_name –∏ category_icon —Å –±–µ–∫–µ–Ω–¥–∞
// –°–µ–π—á–∞—Å –≤ ToyBoxItemResponse —Ç–æ–ª—å–∫–æ toy_category_id, –∞ –Ω—É–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∫–∞–∫ –≤ NextBoxItemResponse
const getToyIcon = (categoryId: number): string => {
  // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ –¥–æ—Ä–∞–±–æ—Ç–∫–∏ API
  const icons = ["üîß", "üé®", "üß∏", "üß†", "üé™"];
  return icons[categoryId % icons.length];
};

const getToyName = (categoryId: number): string => {
  // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ –¥–æ—Ä–∞–±–æ—Ç–∫–∏ API
  const names = [
    "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä",
    "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä",
    "–ú—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞",
    "–ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞",
    "–ò–≥—Ä–∞",
  ];
  return names[categoryId % names.length];
};

const getToyColor = (categoryId: number): string => {
  // –í—Ä–µ–º–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
  const colors = ["#F8CAAF", "#D4E8C0", "#FFD8BE", "#F6E592", "#E8D3F0"];
  return colors[categoryId % colors.length];
};
