import React from 'react';

import { UserData } from '../../types';

interface ChildrenAndSubscriptionsViewProps {
  userData: UserData;
  BottomNavigation: React.ComponentType;
  getAge: (birthDate: string) => number;
  onEditChild: (child: UserData['children'][0]) => void;
  onEditSubscription: (child: UserData['children'][0]) => void;
  onCancelSubscription: (child: UserData['children'][0]) => void;
  onResumeSubscription: () => void;
  onDeleteChild: (child: UserData['children'][0]) => void;
}

export const ChildrenAndSubscriptionsView: React.FC<ChildrenAndSubscriptionsViewProps> = ({
  userData,
  BottomNavigation,
  getAge,
  onEditChild,
  onEditSubscription,
  onCancelSubscription,
  onResumeSubscription,
  onDeleteChild
}) => {
  // Mapping –¥–ª—è —ç–º–æ–¥–∑–∏ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
  const interestEmojis: { [key: string]: string } = {
    '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã': 'üß±',
    '–ü–ª—é—à–µ–≤—ã–µ': 'üß∏',
    '–†–æ–ª–µ–≤—ã–µ': 'üé≠',
    '–†–∞–∑–≤–∏–≤–∞—é—â–∏–µ': 'üß†',
    '–¢–µ—Ö–Ω–∏–∫–∞': '‚öôÔ∏è',
    '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ': 'üé®'
  };

  // Mapping –¥–ª—è —ç–º–æ–¥–∑–∏ –Ω–∞–≤—ã–∫–æ–≤
  const skillEmojis: { [key: string]: string } = {
    '–ú–æ—Ç–æ—Ä–∏–∫–∞': '‚úã',
    '–õ–æ–≥–∏–∫–∞': 'üß©',
    '–í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ': 'üí≠',
    '–¢–≤–æ—Ä—á–µ—Å—Ç–≤–æ': 'üé®',
    '–†–µ—á—å': 'üó£'
  };

  // If no children, show "not subscribed" state
  if (!userData.children || userData.children.length === 0) {
    return (
      <div className="w-full min-h-screen" style={{ fontFamily: 'Nunito, sans-serif', backgroundColor: '#FFE8C8' }}>
        {/* Header */}
        <div className="p-4 flex items-center justify-center" style={{ backgroundColor: '#FFE8C8' }}>
          <h1 className="font-semibold text-gray-800" style={{ fontSize: '26px' }}>
            –î–µ—Ç–∏ –∏ –Ω–∞–±–æ—Ä—ã
          </h1>
        </div>

        {/* Not subscribed content */}
        <div className="p-4 pb-24">
          <div className="relative flex flex-col rounded-3xl overflow-hidden" style={{ 
            backgroundColor: '#747EEC',
            minHeight: '380px',
            maxHeight: '60vh',
            height: 'clamp(380px, 55vh, 600px)'
          }}>
            {/* Illustration area - flexible height */}
            <div className="relative flex-1 overflow-hidden min-h-0">
              <img 
                src="/illustrations/continue.png" 
                alt="Girl with toy box" 
                className="absolute inset-0 w-full h-full object-contain p-2"
                style={{ objectPosition: 'center top' }}
              />
            </div>
            
            {/* Bottom container with text and button - flexible height */}
            <div className="px-4 sm:px-6 py-4 flex flex-col justify-center" style={{ 
              minHeight: '120px',
              maxHeight: '160px'
            }}>
              <p className="text-sm sm:text-base text-white/90 text-center mb-4 leading-relaxed" style={{ fontFamily: 'Open Sans, sans-serif' }}>
                –ó–∞–≤–µ—Ä—à–∏—Ç–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –ø–æ–¥–ø—Å–∏–∫–∏, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–æ–±—Ä–∞—Ç—å –∫–æ—Ä–æ–±–∫—É —Å –∏–≥—Ä—É—à–∫–∞–º–∏ –∏ –¥–æ—Å—Ç–∞–≤–∏—Ç—å –µ—ë –≤–∞–º
              </p>
              
              <button
                onClick={() => console.log('Navigate to subscription')}
                className="w-full bg-white text-[#30313D] py-3 sm:py-4 rounded-3xl font-semibold text-sm sm:text-base transition-all hover:bg-gray-50"
                style={{ fontFamily: 'Open Sans, sans-serif' }}
              >
                –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ
              </button>
            </div>
          </div>
        </div>
        
        <BottomNavigation />
      </div>
    );
  }

  return (
    <div className="w-full min-h-screen" style={{ fontFamily: 'Nunito, sans-serif', backgroundColor: '#FFE8C8' }}>
      {/* Header */}
      <div className="p-4 flex items-center justify-center" style={{ backgroundColor: '#FFE8C8' }}>
        <h1 className="font-semibold text-gray-800" style={{ fontSize: '26px' }}>
          –î–µ—Ç–∏ –∏ –Ω–∞–±–æ—Ä—ã
        </h1>
      </div>

      {/* Content */}
      <div className="p-4 pb-24">
        {/* Loop through all children */}
        {userData.children.map((child, index) => (
          <div key={child.id} className="bg-white rounded-2xl p-4 mb-4">
            {/* Child Info */}
            <div className="mb-6">
              <div className="flex items-center mb-3">
                <div className="w-10 h-10 flex items-center justify-center mr-3">
                  <span className="text-lg">
                    {child.gender === 'male' ? 'üë¶' : 'üëß'}
                  </span>
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-gray-800">{child.name}, {getAge(child.birthDate)} –ª–µ—Ç</h3>
                </div>
              </div>

              {/* Child Comment/Characteristics */}
              {child.comment && child.comment.trim() !== '' && (
                <div className="mb-4">
                  <p className="text-sm text-gray-600 mb-2">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</p>
                  <div className="bg-gray-50 p-3 rounded-lg">
                    <p className="text-sm text-gray-800">{child.comment}</p>
                  </div>
                </div>
              )}

              {/* Interests */}
              <div className="mb-4">
                <p className="text-sm text-gray-600 mb-2">–ò–Ω—Ç–µ—Ä–µ—Å—ã</p>
                <div className="flex flex-wrap gap-2">
                  {child.interests.map((interest, index) => (
                    <span key={index} className="text-gray-800 px-3 py-1 rounded-full text-sm flex items-center gap-1" style={{ backgroundColor: '#F2F2F2' }}>
                      <span>{interestEmojis[interest] || ''}</span>
                      <span>{interest}</span>
                    </span>
                  ))}
                </div>
              </div>

              {/* Skills */}
              <div className="mb-4">
                <p className="text-sm text-gray-600 mb-2">–ù–∞–≤—ã–∫–∏ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è</p>
                <div className="flex flex-wrap gap-2">
                  {child.skills.map((skill, index) => (
                    <span key={index} className="text-gray-800 px-3 py-1 rounded-full text-sm flex items-center gap-1" style={{ backgroundColor: '#F2F2F2' }}>
                      <span>{skillEmojis[skill] || ''}</span>
                      <span>{skill}</span>
                    </span>
                  ))}
                </div>
              </div>

              {/* Subscription */}
              <div className="mb-4">
                <p className="text-sm text-gray-600 mb-2">–¢–∞—Ä–∏—Ñ</p>
                <p className="text-gray-800 font-medium">
                  {child.subscription === 'base' ? '–ë–∞–∑–æ–≤—ã–π' : '–ü—Ä–µ–º–∏—É–º'} ‚Ä¢ 6 –∏–≥—Ä—É—à–µ–∫ ‚Ä¢ ${child.subscription === 'base' ? '35' : '60'}/–º–µ—Å
                </p>
              </div>
            </div>

            {/* Toy Set Composition */}
            {userData.subscriptionStatus !== 'paused' && (
              <div className="mb-6">
                <h4 className="text-gray-800 font-medium mb-3">–°–æ—Å—Ç–∞–≤ –Ω–∞–±–æ—Ä–∞ –∏–≥—Ä—É—à–µ–∫</h4>
                <div className="space-y-3">
                  <div className="flex items-center">
                    <div className="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mr-3">
                      üîß
                    </div>
                    <span className="text-gray-700">x2 –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä</span>
                  </div>
                  <div className="flex items-center">
                    <div className="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center mr-3">
                      üé®
                    </div>
                    <span className="text-gray-700">x2 –¢–≤–æ—Ä—á–µ—Å–∫–∏–π –Ω–∞–±–æ—Ä</span>
                  </div>
                  <div className="flex items-center">
                    <div className="w-10 h-10 bg-orange-100 rounded-full flex items-center justify-center mr-3">
                      üß∏
                    </div>
                    <span className="text-gray-700">x1 –ú—è–≥–∫–∞—è –∏–≥—Ä—É—à–∫–∞</span>
                  </div>
                  <div className="flex items-center">
                    <div className="w-10 h-10 bg-pink-100 rounded-full flex items-center justify-center mr-3">
                      üé™
                    </div>
                    <span className="text-gray-700">x1 –ì–æ–ª–æ–≤–æ–ª–æ–º–∫–∞</span>
                  </div>
                </div>
              </div>
            )}

            {/* Paused subscription message */}
            {userData.subscriptionStatus === 'paused' && (
              <div className="mb-6 p-6 bg-orange-50 rounded-2xl text-center">
                <p className="text-orange-600 text-sm">
                  –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç–µ –µ—ë<br />
                  –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è ‚Äî –∏ –º—ã —Å–Ω–æ–≤–∞ –Ω–∞—á–Ω—ë–º<br />
                  —Å–æ–±–∏—Ä–∞—Ç—å –∫–æ—Ä–æ–±–∫–∏ –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–µ–±–µ–Ω–∫–∞
                </p>
              </div>
            )}

            {/* Action buttons */}
            <div className="space-y-3">
              <button 
                onClick={() => onEditChild(child)}
                className="w-full bg-gray-100 text-gray-700 py-3 rounded-xl text-sm font-medium hover:bg-gray-200 transition-colors"
              >
                –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–µ–±–µ–Ω–∫–∞
              </button>
              <button 
                onClick={() => userData.subscriptionStatus === 'paused' ? onDeleteChild(child) : onEditSubscription(child)}
                className={`w-full py-3 rounded-xl text-sm font-medium transition-colors ${
                  userData.subscriptionStatus === 'paused' 
                    ? 'text-gray-700 hover:opacity-90' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
                style={userData.subscriptionStatus === 'paused' ? { backgroundColor: '#FBC8D5' } : {}}
              >
                {userData.subscriptionStatus === 'paused' ? '–£–¥–∞–ª–∏—Ç—å' : '–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ'}
              </button>
              <button 
                onClick={() => userData.subscriptionStatus === 'paused' ? onResumeSubscription() : onCancelSubscription(child)}
                className={`w-full py-3 rounded-xl text-sm font-medium transition-colors ${
                  userData.subscriptionStatus === 'paused' 
                    ? 'text-white hover:opacity-90' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
                style={userData.subscriptionStatus === 'paused' ? { backgroundColor: '#30313D' } : {}}
              >
                {userData.subscriptionStatus === 'paused' ? '–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' : '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É'}
              </button>
            </div>
          </div>
        ))}

        {/* Add child button */}
        <div className="rounded-2xl p-4 text-center" style={{ backgroundColor: '#747EEC' }}>
          <p className="text-white font-medium mb-2">
            –î–æ–±–∞–≤—å—Ç–µ –µ—â–µ –æ–¥–Ω–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞
          </p>
          <p className="text-white text-sm mb-3">
            –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 20% –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –Ω–∞–±–æ—Ä
          </p>
          <button className="bg-white px-6 py-2 rounded-lg font-medium text-sm" style={{ color: '#747EEC' }}>
            –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞
          </button>
        </div>
      </div>
      <BottomNavigation />
    </div>
  );
}; 